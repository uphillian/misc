#!/usr/bin/python

import datetime
import time
import sys
from optparse import OptionParser

"""By default display the number of days since the epoch
If a date is given, convert that to an epoch
If a number is given, convert that to a date"""

def epoch_to_date(epoch):
	"""Take an epoch and return a string of the date"""
	if epoch == None:
		epoch = (time.time()/86400)
	date = time.gmtime(float(epoch)*86400)
	pretty = datetime.date(date[0],date[1],date[2]).strftime("%b %d, %Y")
	return pretty

def try_dateconvert(datestr,datefmt):
	try:
		return time.strptime(datestr,datefmt)
	except:
		return -1

def date_to_epoch(datestr):
	"""Take a date string and return the epoch"""
	formats = list()
	formats.append('%m/%d/%Y')
	formats.append('%Y-%m-%d')
	formats.append('%m/%d/%Y %H:%M')
	for fmt in formats:
		epochtime = try_dateconvert(datestr,fmt)
		if epochtime != -1:
			break
	return int(time.mktime(epochtime)/86400)

def print_epoch(epoch,pretty,options):
	if options.number:
		print epoch
	elif options.pretty:
		print pretty
	else:
		print "%s (%s)" % (epoch,pretty)

# parse the options
usage = """usage: %prog [options] [epoch epoch2 epoch3 ...]
with no arguments, print the number of days since the epoch
give multiple epochs and dates to calculate multiple epochs
acceptable date formats
YYYY-MM-DD MM/DD/YYYY"""

parser = OptionParser(usage=usage,version="%prog 0.1")
parser.add_option("-n", "--number", dest="number", help="Only print number", action="store_true")
parser.add_option("-p", "--pretty", dest="pretty", help="Only print pretty", action="store_true")
(options,args) = parser.parse_args()

if options.number and options.pretty:
				parser.error("--number and --pretty are mutually exclusive")

if args:
	for arg in args:
		try:
			pretty = epoch_to_date(float(arg))
			epoch = arg
		except:
			try:
				epoch = date_to_epoch(arg)
				pretty = arg
			except:
				print "Error: couldn't convert %s" % arg
				continue
		print_epoch(epoch,pretty,options)
else:
	epoch = int(time.time()/86400)
	pretty = epoch_to_date(epoch)
	print_epoch(epoch,pretty,options)
